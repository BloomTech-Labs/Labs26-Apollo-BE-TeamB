package com.lambdaschool.apollo.models;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.util.ArrayList;
import java.util.List;

@Entity
@Table(name = "contexts")
public class Context extends Auditable {

    /**
     * The primary key (long) of the contexts table.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private long contextId;

    /**
     * The contextname (String). Cannot be null and must be unique
     */
    @NotNull
    @Column(nullable = false, unique = true)
    private String contextname;

    @ManyToMany(
            cascade = {
                    CascadeType.PERSIST,
            })
    @JoinTable(name = "contextQuestions",
            joinColumns = { @JoinColumn(name = "contextid")},
            inverseJoinColumns = {@JoinColumn(name = "questionid")})
    @JsonIgnoreProperties(value = "contexts")
    private List<Question> contextquestions = new ArrayList<>();

    @OneToMany(mappedBy = "topiccontext")
    private List<Topic> topics = new ArrayList<>();

    /**
     * Default constructor used primarily by the JPA.
     */
    public Context() {
    }

    /**
     * Given the params, create a new context object
     * <p>
     * contextId is autogenerated
     *
     * @param contextname The name (String) of the context
     */

    public Context(String contextname)
    {
        this.contextname = contextname;
    }

    public long getContextId()
    {
        return contextId;
    }

    public void setContextId(long contextId)
    {
        this.contextId = contextId;
    }

    public String getContextname()
    {
        return contextname;
    }

    public void setContextname(String contextname)
    {
        this.contextname = contextname;
    }

    public List<Question> getContextquestions()
    {
        return contextquestions;
    }

    public void setContextquestions(List<Question> contextquestions)
    {
        this.contextquestions = contextquestions;
    }

    public List<Topic> getTopics()
    {
        return topics;
    }

    public void setTopics(List<Topic> topics)
    {
        this.topics = topics;
    }
}
